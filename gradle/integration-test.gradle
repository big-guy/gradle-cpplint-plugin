sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task createClasspathManifest {
    def outputDir = sourceSets.integrationTest.output.resourcesDir

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    integrationTestCompile gradleTestKit()
    integrationTestCompile files(createClasspathManifest)
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test

    reports {
        html.destination = project.file("$html.destination/integration")
        junitXml.destination = project.file("$junitXml.destination/integration")
    }
}

check.dependsOn integrationTest

idea.module {
    sourceSets.integrationTest.allSource.srcDirs.each {
        testSourceDirs += it
    }

    scopes.TEST.plus += [configurations.integrationTestCompile]
    scopes.TEST.plus += [configurations.integrationTestRuntime]
}
